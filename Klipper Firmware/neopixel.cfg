#####################################################################
#	LED Control
#####################################################################

# INDEX# depends how you have it wired. You can verify your LED's INDEX# by the following
# SET_LED LED=hotend_rgb RED=0.0 GREEN=0.0 BLUE=1.0 INDEX=1
# SET_LED LED=hotend_rgb RED=0.0 GREEN=1.0 BLUE=0.0 INDEX=2
# SET_LED LED=hotend_rgb RED=1.0 GREEN=0.0 BLUE=0.0 INDEX=3
# SET_LED LED=hotend_rgb RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=4
# INDEX=1 will light up BLUE
# INDEX=2 will light up GREEN
# INDEX=3 will light up RED
# INDEX=4 will light up WHITE
# Mine are configured as INDEX 1 and 2 are the status LEDs. 3 and 4 are the print head LED
###################
#      #     #    #
# 1  ###########  #
# 2  #  HOTEND #  #
#    #         #  #
#    ###########  #
#        FAN      #
#      3     4    #
###################

#################
#    #     #    #
#  ###########  #
#  #  HOTEND #  #
#  #         #  #
#  ###########  #
#      FAN      #
#    1  2  3    #
#################

#SET_LED LED=hotend_rgb RED=0 GREEN=1.0 BLUE=0.0 INDEX=1
#SET_LED LED=hotend_rgb RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2
#SET_LED LED=hotend_rgb RED=0 GREEN=1.0 BLUE=0.0 INDEX=3

[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
  LED_READY

[gcode_macro LED_READY]
gcode:
  CANCEL_THERMOMETER
  SET_LED LED=hotend_rgb RED=0.0 GREEN=1.0 BLUE=0.0 INDEX=1
  SET_LED LED=hotend_rgb RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2

#[gcode_macro LED_NOZZLE]
#gcode:
#  CANCEL_THERMOMETER
#  SET_LED LED=hotend_rgb RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=3

[gcode_macro LED_SUCCESS]
gcode:
  CANCEL_THERMOMETER
  SET_LED LED=hotend_rgb RED=0.0 GREEN=1.0 BLUE=0.0 INDEX=1
    
[gcode_macro LED_FAIL]
gcode:
  CANCEL_THERMOMETER
  SET_LED LED=hotend_rgb RED=1.0 GREEN=0.0 BLUE=0.0 INDEX=2
  
[gcode_macro LED_STARTING]
gcode:
  LED_THERMOMETER
    
[gcode_macro LED_PRINTING]
gcode:
  CANCEL_THERMOMETER
  SET_LED LED=hotend_rgb RED=1.0 GREEN=1.0 BLUE=1.0
    
[gcode_macro LED_PAUSED]
gcode:
  CANCEL_THERMOMETER
  SET_LED LED=hotend_rgb RED=0.0 GREEN=1.0 BLUE=1.0
  
[gcode_macro LED_NIGHT_LIGHT]
gcode:
  CANCEL_THERMOMETER
  SET_LED LED=hotend_rgb RED=0.1 GREEN=0.025 BLUE=0.0

[gcode_macro CANCEL_THERMOMETER]
gcode:
  UPDATE_DELAYED_GCODE ID=LED_THERMOMETER_REFRESH DURATION=0
  
[gcode_macro LED_THERMOMETER]
gcode:
  SET_LED_TEMPERATURES
  UPDATE_DELAYED_GCODE ID=LED_THERMOMETER_REFRESH DURATION=2  

[delayed_gcode LED_THERMOMETER_REFRESH]
initial_duration: 10.0
gcode:
    SET_LED_TEMPERATURES
    UPDATE_DELAYED_GCODE ID=LED_THERMOMETER_REFRESH DURATION=2

[gcode_macro SET_LED_TEMPERATURES]
variable_extruder_red: 0.0
variable_extruder_green: 0.0
variable_extruder_blue: 0.0
variable_bed_red: 0.0
variable_bed_green: 0.0
variable_bed_blue: 0.0
variable_status_red: 0.0
variable_status_green: 0.0
variable_status_blue: 0.0

gcode:
    # Start by setting safe default values
    {% set extruder_red = 1.0 %}
    {% set extruder_green = 0.0 %}
    {% set extruder_blue = 0.0 %}
    {% set bed_red = 1.0 %}
    {% set bed_green = 0.0 %}
    {% set bed_blue = 0.0 %}
    {% set status_red = 1.0 %}
    {% set status_green = 0.0 %}
    {% set status_blue = 0.0 %}

    # Make status display red if any heater is above 50C, otherwise green
    {% if printer.extruder.temperature >= 50 or printer.heater_bed.temperature >= 50 %}
        {% set status_red = 1.0 %}
        {% set status_green = 0.0 %}
        {% set status_blue = 0.0 %}
    {% else %}
        {% set status_red = 0.0 %}
        {% set status_green = 1.0 %}
        {% set status_blue = 1.0 %}
    {% endif %}

    # Get extruder target temperature, assume 260 if off (avoids divide-by-zero)
    {% if printer.extruder.target > 0.0 %}
      {% set extruder_target = printer.extruder.target|float %}
    {% else %}
      {% set extruder_target = 260.0 %}
    {% endif %}

    # Get bed target temperature, assume 115 if off (avoids divide-by-zero)
    {% if printer.heater_bed.target > 0.0 %}
     {% set bed_target = printer.heater_bed.target|float %}
    {% else %}
      {% set bed_target = 115.0 %}
    {% endif %}

    # Get actual temperatures as measured by the thermistors
    {% set extruder_actual = printer.extruder.temperature|float %}
    {% set bed_actual = printer.heater_bed.temperature|float %}

    # Set extruder LED colour
    {% set extruder_red = extruder_actual / extruder_target %}
    {% set extruder_green = 0.0 %}  
    {% set extruder_blue =(extruder_target - extruder_actual) / extruder_target %} 
    # Sanity checking - enforce range 0.0 to 1.0 inclusive
    {% if extruder_red > 1.0 %} {% set extruder_red = 1.0 %} {% endif %}
    {% if extruder_green > 1.0 %} {% set extruder_green = 1.0 %} {% endif %}
    {% if extruder_blue > 1.0 %} {% set extruder_blue = 1.0 %} {% endif %}
    {% if extruder_red < 0.0 %} {% set extruder_red = 0.0 %} {% endif %}
    {% if extruder_green < 0.0 %} {% set extruder_green = 0.0 %} {% endif %}
    {% if extruder_blue < 0.0 %} {% set extruder_blue = 0.0 %} {% endif %}


    # Set bed LED colour
    {% set bed_red = bed_actual / bed_target %}  
    {% set bed_green = 0.0 %}  
    {% set bed_blue = (bed_target - bed_actual) / bed_target %}
    # Sanity checking - enforce range 0.0 to 1.0 inclusive
    {% if bed_red > 1.0 %} {% set bed_red = 1.0 %} {% endif %}
    {% if bed_green > 1.0 %} {% set bed_green = 1.0 %} {% endif %}
    {% if bed_blue > 1.0 %} {% set bed_blue = 1.0 %} {% endif %}
    {% if bed_red < 0.0 %} {% set bed_red = 0.0 %} {% endif %}
    {% if bed_green < 0.0 %} {% set bed_green = 0.0 %} {% endif %}
    {% if bed_blue < 0.0 %} {% set bed_blue = 0.0 %} {% endif %}
    
    # Write the computed colour values to the neopixel LEDs.
    SET_LED LED=hotend_rgb RED={extruder_red} GREEN={extruder_green} BLUE={extruder_blue} INDEX=2
    SET_LED LED=hotend_rgb RED={bed_red} GREEN={bed_green} BLUE={bed_blue} INDEX=1
